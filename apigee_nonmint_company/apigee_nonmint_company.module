<?php
/**
 * @file
 * Code for the apigee_nonmint_company feature.
 */

include_once 'apigee_nonmint_company.features.inc';

/**
 * Implements hook_permission().
 */
function apigee_nonmint_company_permission() {
  $permissions = array();

  // Note: This displays a list of companies, but in order to manage companies
  // in the list, you will need manage permissions from apigee_company as well.
  $permissions['manage all companies'] = array(
    'title' => t('Manage all companies'),
    'description' => t('Display admin list all companies.'),
  );
  return $permissions;
}

/**
 * Implements hook_menu().
 */
function apigee_nonmint_company_menu() {
  $items = array();

  $items['admin/content/companies'] = array(
    'title' => 'Companies',
    'description' => 'Manage all companies.',
    'access arguments' => array('manage all companies'),
    'page callback' => 'apigee_nonmint_company_all_companies',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_entity_info_alter().
 */
function apigee_nonmint_company_entity_info_alter(&$info) {

  // Overwrite the apigee_company_invitation controller with the custom entity
  // which saves data to drupal instead of backend
  $info['apigee_company_invitation']['controller class'] = 'ApigeeNonMintCompanyInvitation';
}

/**
 * Implements hook_entity_load().
 */
function apigee_nonmint_company_entity_load($entities, $type){
  if ($type == 'company_invitation_non_mint') {
    foreach($entities as &$entity){
      $entity->developerId = $entity->developer_id;
      $entity->companyId = $entity->company_id;
    }
  }
}

/**
 * Implements hook_menu_alter().
 */
function apigee_nonmint_company_menu_alter(&$items) {
  $companies_list_callback = $items['api_company/companies/list']['page callback'];
  $items['api_company/companies/list']['page callback'] = 'apigee_nonmint_company_company_list';
  $items['api_company/companies/list']['page arguments'] = array($companies_list_callback) + $items['api_company/companies/list']['page arguments'];
  $items['users/me/monetization/company/developers'] = $items['api_company/company/developers'];

  $items['api_company/developer/company/add']['access callback'] = 'user_access';
  $items['api_company/%ctools_js/developer/%/modify_role']['access callback'] = 'user_access';
  $items['api_company/company/developer/%/remove']['access callback'] = 'user_access';

  $items['api_company/developer/company/add']['access arguments'] = array('manage company users');
  $items['api_company/%ctools_js/developer/%/modify_role']['access arguments'] = array('manage company users');
  $items['api_company/company/developer/%/remove']['access arguments'] = array('manage company users');
}

/**
 * Page callback for companies list.
 *
 * Make sure that we reset the company roles before switching to list all companies
 *
 * @param $callback
 * @return string
 */
function apigee_nonmint_company_company_list($callback){
  $need_redirect = apigee_company_get_current_context_company() !== NULL;
  if ($need_redirect) {
    //force a redirect to clean out the context and redirect back to the same page.
    drupal_goto("api_company/company/switch/", array("query" => drupal_get_destination()));
  }
  if( function_exists($callback)) {
    return $callback();
  }
  drupal_set_message("Could not find the callback for company list", 'error');
  return "";
}

/**
 *  Implements hook_form_FORM_ID_alter().
 */
function apigee_nonmint_company_form_apigee_company_company_form_alter(&$form, $form_state){
  $form['actions']['submit']['#submit'][] = 'apigee_nonmint_company_form_apigee_company_company_form_submit';
}

/**
 * Form API Callback: Handles the submit for the company create form.
 */
function apigee_nonmint_company_form_apigee_company_company_form_submit($form, &$form_state) {
  if (module_exists("devconnect_monetization")) {
    return;
  }

  global $user;

  $company_values = array(
    'name' => $form_state['values']['company_internal_name'],
    'displayName' => $form_state['values']['company_display_name'],
    'attributes' => array('ADMIN_EMAIL' => $user->mail),
  );

  $company_entity = entity_create('apigee_company', $company_values);
  $saved = entity_save('apigee_company', $company_entity);
  global $user;

  if (!$saved) {
    drupal_set_message("Company not saved", 'error');
  }
  else {
    entity_get_controller('apigee_company')->updateDeveloper($company_values['name'], $user->mail, APIGEE_COMPANY_ADMIN_ROLE_NAME);
    drupal_set_message("Company Created");
  }
}

/**
 *  Implements hook_theme_registry_alter().
 */
function apigee_nonmint_company_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'apigee_nonmint_company');
  if (isset($theme_registry['apigee_company_developer_companies'])) {
    $theme_registry['apigee_company_developer_companies']['includes'][] = $path . '/apigee_nonmint_company.theme.inc';
    $theme_registry['apigee_company_developer_companies']['function'] = 'apigee_nonmint_company_developer_companies';
  }
  if (isset($theme_registry['apigee_company_switcher'])) {
    $theme_registry['apigee_company_switcher']['includes'][] = $path . '/apigee_nonmint_company.theme.inc';
    $theme_registry['apigee_company_switcher']['function'] = 'apigee_nonmint_company_switcher';
  }

}

/**
 * Utility function that returns and indexed array of all company objects.
 *
 * @return array
 *   An array of company entities.
 */
function apigee_nonmint_company_get_all_company_objects() {
  $company_list = entity_load('apigee_company');
  return $company_list;
}

/**
 * Get a themed list of all companies.
 *
 * @global object $user
 *
 * @return string
 *   Themed html for the company list and invitations.
 * @throws Exception
 */
function apigee_nonmint_company_all_companies() {
  $items_per_page = variable_get('apigee_nonmint_company_items_per_page', 20);
  $company_objects = apigee_nonmint_company_get_all_company_objects();
  $items_total = count($company_objects);

  $current_page = pager_default_initialize($items_total, $items_per_page);
  // Querying for a subset would require circumventing or modifying the SDK
  // so we return everything and then slice to keep the UI manageable.
  $company_objects = array_slice($company_objects, ($current_page * $items_per_page), $items_per_page);

  $output = theme('apigee_company_developer_companies', array('companies' => $company_objects));
  $output .= theme('pager', array('quantity' => $items_total));
  return $output;
}

